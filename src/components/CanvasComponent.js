import React, { Component } from 'react'
import { View } from 'react-native'
import Canvas , {Image as CanvasImage} from 'react-native-canvas'
import { connect } from 'react-redux'
import EscPosPrinter from '../printer/printer'

class CanvasComponent extends Component {
  constructor(props) {
    super(props)
    this.state = {
      img: null
    }

    this.canvas = React.createRef()
  }

  componentDidMount() {
    debugger
    if (this.props.isCheckFetch) {
      const buffer = [0x1B, 0x40, 0x1C, 0x2E, 0x1B, 0x74, 0x11, 0x1B, 0x21, 0x00, 0x1B, 0x61, 0x00, 0x20, 0x0A, 0x1B, 0x21, 0x00, 0x1B, 0x61, 0x00, 0x20, 0x0A, 0x1B, 0x21, 0x30, 0x1B, 0x61, 0x00, 0x0A, 0x1B, 0x21, 0x30, 0x1B, 0x61, 0x01, 0x92, 0x8E, 0x82, 0x80, 0x90, 0x8D, 0x9B, 0x89, 0x20, 0x97, 0x85, 0x8A, 0x20, 0xFC, 0x31, 0x32, 0x32, 0x0A, 0x1B, 0x21, 0x00, 0x1B, 0x61, 0x00, 0x20, 0x0A, 0x1B, 0x21, 0x00, 0x1B, 0x61, 0x00, 0x84, 0xA0, 0xE2, 0xA0, 0x2F, 0xA2, 0xE0, 0xA5, 0xAC, 0xEF, 0x3A, 0x20, 0x31, 0x36, 0x2E, 0x30, 0x39, 0x2E, 0x32, 0x30, 0x31, 0x39, 0x20, 0x30, 0x32, 0x3A, 0x34, 0x31, 0x0A, 0x1B, 0x21, 0x00, 0x1B, 0x61, 0x00, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x0A, 0x1B, 0x21, 0x00, 0x1B, 0x61, 0x00, 0x31, 0x2E, 0xAA, 0xA5, 0xA3, 0xA0, 0x0A, 0x1B, 0x21, 0x00, 0x1B, 0x61, 0x02, 0x31, 0x20, 0x78, 0x20, 0x20, 0x31, 0x30, 0x30, 0x2C, 0x30, 0x30, 0x20, 0x3D, 0x20, 0x20, 0x31, 0x30, 0x30, 0x2C, 0x30, 0x30, 0x0A, 0x1B, 0x21, 0x00, 0x1B, 0x61, 0x00, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x0A, 0x1B, 0x21, 0x30, 0x1B, 0x61, 0x02, 0x88, 0x92, 0x8E, 0x83, 0x8E, 0x3A, 0x20, 0x20, 0x31, 0x30, 0x30, 0x2C, 0x30, 0x30, 0x0A, 0x1B, 0x21, 0x00, 0x1B, 0x61, 0x02, 0x8F, 0x8E, 0x8B, 0x93, 0x97, 0x85, 0x8D, 0x8E, 0x3A, 0x20, 0x20, 0x32, 0x32, 0x32, 0x2C, 0x30, 0x30, 0x0A, 0x1B, 0x21, 0x00, 0x1B, 0x61, 0x02, 0x91, 0x84, 0x80, 0x97, 0x80, 0x3A, 0x20, 0x20, 0x31, 0x32, 0x32, 0x2C, 0x30, 0x30, 0x0A, 0x1B, 0x21, 0x00, 0x1B, 0x61, 0x00, 0x20, 0x0A, 0x1B, 0x21, 0x00, 0x1B, 0x61, 0x00, 0x8A, 0xA0, 0xE1, 0xE1, 0xA8, 0xE0, 0x3A, 0x20, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x20, 0x20, 0x28, 0x84, 0xA8, 0xE0, 0xA8, 0xA6, 0x29, 0x0A, 0x1B, 0x21, 0x00, 0x1B, 0x61, 0x00, 0x20, 0x0A, 0x1B, 0x21, 0x00, 0x1B, 0x61, 0x00, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x0A, 0x1B, 0x21, 0x00, 0x1B, 0x61, 0x00, 0x20, 0x0A, 0x1B, 0x21, 0x00, 0x1B, 0x61, 0x00, 0x20, 0x0A, 0x1B, 0x21, 0x00, 0x1B, 0x61, 0x00, 0x20, 0x0A, 0x1D, 0x56, 0x31]

      this._escPosPrinter = this._escPosPrinter || new EscPosPrinter(this.canvas.current)
      this._escPosPrinter.print(buffer)

       const img =  new CanvasImage(this.canvas.current, 100, 100)
       console.log(img)
        console.log(this.canvas.current.toDataURL()
          .then(
            res => console.log(res)
          ))
      // this.setState({img: new Image(this.canvas.current)}, () => console.log(this.state.img))
    }
    // const image = new Image(this.handleCanvas.current, height, width);
  }
  render() {
    return (
      <View style={{position: 'absolute', top:1000, opacity: 0}}>
        <Canvas ref={this.canvas} />
      </View>
    )
  }
}
const mapStateToProps = state => ({
  isCheckFetch: state.isCheckFetch
})


export default connect(mapStateToProps)(CanvasComponent)

import React, { Component } from 'react'
import { createMaterialBottomTabNavigator } from 'react-navigation-material-bottom-tabs'
import Icon from 'react-native-ionicons'
import Amplify from 'aws-amplify'
import { createAppContainer } from 'react-navigation'
import {
  withAuthenticator
} from 'aws-amplify-react-native'
import awsconfig from '../aws-exports'
import { Provider } from 'react-redux'
import store from './stores'
import Canvas from 'react-native-canvas'

import { View, StatusBar, Platform } from 'react-native'
import {
  AmplifyTheme,
  Localei18n
} from './components'

import {
  NfcScreen,
  BlankScreen,
  ChecksScreen,
  QRCodeScreen
} from './screens'
import EscPosPrinter from './printer/printer'
import { CardItem } from "native-base"

const STATUS_BAR_HEIGHT = Platform.OS === 'ios' ? 20 : StatusBar.currentHeight;



Amplify.configure({
  ...awsconfig,
  Analytics: {
    disabled: true
  }
})

const signUpConfig = {
  hiddenDefaults: ['phone_number'],
  signUpFields: [
    {
      label: 'Email',
      key: 'email',
      required: true,
      displayOrder: 1,
      type: 'string',
    },
    {
      label: 'Password',
      key: 'password',
      required: true,
      displayOrder: 2,
      type: 'password',
    }]

}

const BottomNavigator = createMaterialBottomTabNavigator(
  {
    'Ваши чеки': {
      screen: ChecksScreen,
      navigationOptions: {
        tabBarIcon: ({ tintColor }) =>
          <Icon name="list" size={25} color={tintColor} />
      }
    },
    'Сканировать чек': {
      screen: QRCodeScreen,
      navigationOptions: {
        tabBarIcon: ({ tintColor }) =>
          <Icon name="qr-scanner" size={25} color={tintColor} />
      }
    },
    "Настройки": {
      screen: BlankScreen,
      navigationOptions: {
        tabBarIcon: ({ tintColor }) =>
          <Icon name="settings" size={25} color={tintColor} />
      }
    }
  },
  {

    activeColor: 'rgb(223,225,86)',
    inactiveColor: 'rgb(76,171,157)',

    theme: AmplifyTheme,
    barStyle: { backgroundColor: 'rgb(21,59,63)',
    }
  }
)

const BottomContainer = createAppContainer(BottomNavigator)

class Index extends Component {
  constructor(props) {
    super(props)
    this.state = {
      img: null
    }

    this.canvas = React.createRef()
  }

  // componentDidMount() {
  //   if (this.canvas) {
  //     const buffer = [0x1B, 0x40, 0x1C, 0x2E, 0x1B, 0x74, 0x11, 0x1B, 0x21, 0x00, 0x1B, 0x61, 0x00, 0x20, 0x0A, 0x1B, 0x21, 0x00, 0x1B, 0x61, 0x00, 0x20, 0x0A, 0x1B, 0x21, 0x30, 0x1B, 0x61, 0x00, 0x0A, 0x1B, 0x21, 0x30, 0x1B, 0x61, 0x01, 0x92, 0x8E, 0x82, 0x80, 0x90, 0x8D, 0x9B, 0x89, 0x20, 0x97, 0x85, 0x8A, 0x20, 0xFC, 0x31, 0x32, 0x32, 0x0A, 0x1B, 0x21, 0x00, 0x1B, 0x61, 0x00, 0x20, 0x0A, 0x1B, 0x21, 0x00, 0x1B, 0x61, 0x00, 0x84, 0xA0, 0xE2, 0xA0, 0x2F, 0xA2, 0xE0, 0xA5, 0xAC, 0xEF, 0x3A, 0x20, 0x31, 0x36, 0x2E, 0x30, 0x39, 0x2E, 0x32, 0x30, 0x31, 0x39, 0x20, 0x30, 0x32, 0x3A, 0x34, 0x31, 0x0A, 0x1B, 0x21, 0x00, 0x1B, 0x61, 0x00, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x0A, 0x1B, 0x21, 0x00, 0x1B, 0x61, 0x00, 0x31, 0x2E, 0xAA, 0xA5, 0xA3, 0xA0, 0x0A, 0x1B, 0x21, 0x00, 0x1B, 0x61, 0x02, 0x31, 0x20, 0x78, 0x20, 0x20, 0x31, 0x30, 0x30, 0x2C, 0x30, 0x30, 0x20, 0x3D, 0x20, 0x20, 0x31, 0x30, 0x30, 0x2C, 0x30, 0x30, 0x0A, 0x1B, 0x21, 0x00, 0x1B, 0x61, 0x00, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x0A, 0x1B, 0x21, 0x30, 0x1B, 0x61, 0x02, 0x88, 0x92, 0x8E, 0x83, 0x8E, 0x3A, 0x20, 0x20, 0x31, 0x30, 0x30, 0x2C, 0x30, 0x30, 0x0A, 0x1B, 0x21, 0x00, 0x1B, 0x61, 0x02, 0x8F, 0x8E, 0x8B, 0x93, 0x97, 0x85, 0x8D, 0x8E, 0x3A, 0x20, 0x20, 0x32, 0x32, 0x32, 0x2C, 0x30, 0x30, 0x0A, 0x1B, 0x21, 0x00, 0x1B, 0x61, 0x02, 0x91, 0x84, 0x80, 0x97, 0x80, 0x3A, 0x20, 0x20, 0x31, 0x32, 0x32, 0x2C, 0x30, 0x30, 0x0A, 0x1B, 0x21, 0x00, 0x1B, 0x61, 0x00, 0x20, 0x0A, 0x1B, 0x21, 0x00, 0x1B, 0x61, 0x00, 0x8A, 0xA0, 0xE1, 0xE1, 0xA8, 0xE0, 0x3A, 0x20, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x20, 0x20, 0x28, 0x84, 0xA8, 0xE0, 0xA8, 0xA6, 0x29, 0x0A, 0x1B, 0x21, 0x00, 0x1B, 0x61, 0x00, 0x20, 0x0A, 0x1B, 0x21, 0x00, 0x1B, 0x61, 0x00, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x0A, 0x1B, 0x21, 0x00, 0x1B, 0x61, 0x00, 0x20, 0x0A, 0x1B, 0x21, 0x00, 0x1B, 0x61, 0x00, 0x20, 0x0A, 0x1B, 0x21, 0x00, 0x1B, 0x61, 0x00, 0x20, 0x0A, 0x1D, 0x56, 0x31]
  //
  //     this._escPosPrinter = this._escPosPrinter || new EscPosPrinter(this.canvas.current)
  //     this._escPosPrinter.print(buffer)
  //
  //     // const img =  new CanvasImage(this.canvas.current, 100, 100)
  //     // console.log(img)
  //     // this.setState({img: new Image(this.canvas.current)}, () => console.log(this.state.img))
  //   }
  //   // const image = new Image(this.handleCanvas.current, height, width);
  // }

  render() {
    return (
        <Provider store={store}>
          <View style={{
            width: "100%",
            height: STATUS_BAR_HEIGHT,
            backgroundColor: "rgb(21,59,63)"
          }}>
            <StatusBar barStyle="light-content" />
          </View>


          <BottomContainer/>
            <View style={{position: 'absolute', top:1000, opacity: 0}}>
            <Canvas ref={this.canvas} />
            </View>
        </Provider>
    )
  }
}



 export default withAuthenticator(Index,   {  signUpConfig, usernameAttributes: 'email' }, <Localei18n/>, null, AmplifyTheme )
